plsql.execute <<-SQL

CREATE OR REPLACE PROCEDURE  CALCULAR_SIMULACION(TASA1 IN DECIMAL, NUMERO_CUOTAS IN INTEGER, VALOR_PRESTAMO IN DECIMAL) AS
TASA2 DECIMAL := (TASA1 / 100);
NUMERO_CUOTAS INTEGER := 0;
VALOR_PRESTAMO DECIMAL := 0;
VALOR1 DECIMAL := 0;
VALOR2 DECIMAL := 0;
CUOTA_MENSUAL DECIMAL := 0;
ABONO_INTERES DECIMAL := 0;
ABONO_CAPITAL DECIMAL := 0;
SALDO DECIMAL := 0;
BEGIN 
    DELETE FROM AMORTIZACION;
    VALOR1 := (TASA2 * VALOR_PRESTAMO);
    VALOR2 := (1 - (1 + TASA2) ** (- NUMERO_CUOTAS));
    CUOTA_MENSUAL := (VALOR1 / VALOR2);
    ABONO_INTERES := (TASA2 * VALOR_PRESTAMO);
    ABONO_CAPITAL := (CUOTA_MENSUAL - ABONO_CAPITAL);
    SALDO := VALOR_PRESTAMO - ABONO_CAPITAL;
    FOR I IN 1..NUMERO_CUOTAS LOOP
        INSERT INTO AMORTIZACION (NUMERO_CUOTA, CUOTA_MENSUAL, ABONO_CAPITAL, ABONO_INTERES, SALDO) 
            VALUES (NUMERO_CUOTAS, CUOTA_MENSUAL, ABONO_CAPITAL, ABONO_INTERES, SALDO);
    END LOOP;
END;

SQL

plsql.execute <<-SQL

CREATE OR REPLACE VIEW PLAN_AMORTIZACION AS
    SELECT *, SUM(ABONO_INTERES) AS total_interes FROM AMORTIZACION
    ORDER BY NUMERO_CUOTA;
	
SQL


plsql.execute <<-SQL

FUNCTION FIND_OUTLIER(ARREGLO) {
  CONTADOR = 0;
  FOR(LET I = 0; I < 3; I++) {
    VALOR = ARREGLO[I];
    IF(VALOR % 2 === 0) CONTADOR ++;  
  }
  LET ISEVEN = CONTADOR > 1;
  FOR (LET I = 0; I < ARREGLO.LENGTH; I++) {
    IF((ARREGLO[I] % 2 === 0) !== ISEVEN) RETURN ARREGLO[I]; 
  }
  RETURN NEW ERROR('ARREGLO NO CONTIENE OUTLIER.');
}

SQL

